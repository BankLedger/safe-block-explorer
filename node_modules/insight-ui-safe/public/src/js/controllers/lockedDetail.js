"use strict";


angular.module('insight.lockedDetail').controller('lockedDetailController',
    function ($scope, $rootScope, $routeParams, LockedDetailByAddress) { //todo $location, Global

        $scope.address = $routeParams.address;
        $scope.assetName = $routeParams.assetName;

        var jumpPage = 1;
        var thisPage = 1;
        var displayLength = 7;
        $scope.loading = true;

        $scope.order = "DESC";
        $scope.orderIcon = "↓";
        $scope.list = [];
        $scope.ExpandedTxID = true;

        $scope.getAddressLockedDetail = function (page, flag) {
            if (flag == "orderBy") {
                thisPage = page;
            } else {
                if (flag != "true") {
                    if (page > $scope.maxPage) {
                        return;
                    } else if (page < 1) {
                        return;
                    } else if (thisPage == page) {
                        return;
                    }
                    thisPage = page;
                }
            }

            $scope.list = [];
            $scope.loading = true;
            LockedDetailByAddress.get({
                address: $scope.address,
                assetName: $scope.assetName,
                page: page,
                orderBy: $scope.order
            }, function (data) {
                $scope.pageBut = [];
                $scope.pageButM = [];
                $scope.list = data.list;
                $scope.more = data.more;
                $scope.maxPage = data.maxPage;
                setPageButs(page, data.maxPage, function (startPage, endPage) {
                    for (var i = startPage; i <= endPage; i++) {
                        $scope.pageBut.push({
                            num: i,
                            class: i == page ? "btn-default" : "btn-primary"
                        });
                        $scope.pageButM.push({
                            num: i,
                            class: i == page ? "click" : ""
                        });
                    }
                });
                $scope.loading = false;
                $scope.prePage = page - 1;
                $scope.nextPage = page + 1;
            })
        };

        /**
         * 切换排序
         */
        $scope.addressLockedOrder = function () {
            if ($scope.order == 'ASC') {
                $scope.order = 'DESC';
                $scope.orderIcon = '↓';
            } else {
                $scope.order = 'ASC';
                $scope.orderIcon = '↓';
            }
            $scope.getAddressLockedDetail(1, "orderBy");
        };
        /**
         * 格式金额
         * @param num
         * @return {Number}
         */
        $scope.formatNumber = function (num) {
            return parseFloat(parseFloat(num).toFixed(8));
        };

        $scope.$watch('jumpPage', function (page) { //绑定控件元素值
            jumpPage = parseInt(page) || 0;
            if (jumpPage > $scope.maxPage) {
                window.document.getElementById("jumpInput").value = $scope.maxPage;
            } else if (jumpPage < 1) {
                if (window.document.getElementById("jumpInput")) {
                    window.document.getElementById("jumpInput").value = 1;
                }
            }
        });

        $scope.jumpPageBut = function () {
            if (jumpPage > 0 && thisPage != jumpPage) {
                if (jumpPage > $scope.maxPage) {
                    jumpPage = parseInt($scope.maxPage);
                }
                $scope.getAddressLockedDetail(jumpPage, "true");
            }
        };

        /**
         * 分页按钮
         * @param page
         * @param maxPage
         * @param cb
         */
        function setPageButs(page, maxPage, cb) {
            var startPage = Math.round(page - displayLength / 2 + 1);
            var endPage = Math.round(page + displayLength / 2);
            if (startPage <= 1) {
                startPage = 1;
                endPage = startPage + displayLength - 1;
                if (endPage >= maxPage - 1) {
                    endPage = maxPage - 1;
                }
            }
            if (endPage >= maxPage - 1) {
                endPage = maxPage;
                startPage = maxPage - displayLength + 1;
                if (startPage <= 1) {
                    startPage = 1;
                }
            }
            cb(startPage, endPage);
        }

    });